name: Flutter CI/CD Configuration

# Command ini digunakan untuk mentrigger workflow ini menggunakan
# event push tag pada branch production
on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*" # on every version tag will build a new android artifact example: v3.1.2+6
jobs:
  build:
    #1. Build APK dan APPBUNDLE
    name: Build Artifacts and Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Menyiapkan Java
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "microsoft"
          java-version: "11"

      # Menyiapkan Flutter dengan menggunakan channel stable
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      # Step ini digunakan untuk mengcopy file secrets ke .env
      - name: Copy secrets to .env
        run: |
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env
          echo "BASE_URL_SEA=${{ secrets.BASE_URL_SEA }}" >> .env
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env
          echo "SERVER_KEY=${{ secrets.SERVER_KEY }}" >> .env
          echo "CLIENT_KEY=${{ secrets.CLIENT_KEY }}" >> .env

      # Step ini digunakan untuk menginstall dependency yang dibutuhkan
      - name: Pub Get Packages
        run: flutter pub get

      # Step ini digunakan untuk build apk dan split per abi
      - name: Build APK
        run: flutter build apk --split-per-abi --release

      # Step ini digunakan untuk build aab
      - name: Build APPBUNDLE
        run: flutter build appbundle --release

      # Step ini digunakan untuk merelease apk dan aab ke github release
      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/*.aab"
          tag: v1.0.${{ github.run_number }}
